analyzer:
  # Exclude files from analysis. Must be relative to the root of the package.
  exclude:
    # Build
    - "build/**"
    # Tests
    - "test/**.mocks.dart"
    - ".test_coverage.dart"
    - "coverage/**"
    # Assets
    - "assets/**"
    # Codegen
    - "**/*.freezed.dart"
    - "**/*.g.dart"
    - "**/*.gr.dart"
    - "**/*.gen.dart"
    - "**/*.gql.dart"
    - "**/*.config.dart"
    - "**/*.mocks.dart"
    - "**/*.pg.dart"
    - "**/*.pb.dart"
    - "**/*.pbenum.dart"
    - "**/*.pbjson.dart"
    - "**/*.pbgrpc.dart"
    # Tools
    - ".dart_tool/**"
    # Platform
    - "ios/**"
    - "android/**"
    - "web/**"
    - "macos/**"
    - "windows/**"
    - "linux/**"
    # etc
    - "lib/generated_plugin_registrant.dart"
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

  enable-experiment:
    - inference-update-2
    - sealed-class
    - class-modifiers
    - records
    - patterns
    - variance
    - const-functions
    - macros
    - inline-class
    - native-assets

  errors:
    # Built-in rules
    body_might_complete_normally_nullable: ignore
    strict_raw_type: ignore #
    inference_failure_on_function_invocation: ignore #
    inference_failure_on_untyped_parameter: ignore #

    # Info
    todo: info
    directives_ordering: info

    # Warning
    unsafe_html: warning
    no_logic_in_create_state: warning
    empty_catches: warning

    avoid_empty_else: warning
    avoid_returning_null_for_future: warning
    avoid_type_to_string: warning
    empty_statements: warning
    hash_and_equals: warning
    collection_methods_unrelated_type: warning
    dangling_library_doc_comments: warning
    implicit_call_tearoffs: warning
    type_literal_in_constant_pattern: warning
    unnecessary_to_list_in_spreads: warning
    use_string_in_part_of_directives: warning
    use_super_parameters: warning

    # Error
    avoid_dynamic_calls: error
    avoid_relative_lib_imports: error
    prefer_relative_imports: error
    avoid_slow_async_io: error
    avoid_types_as_parameter_names: error
    cancel_subscriptions: error
    close_sinks: error
    valid_regexps: error
    always_require_non_null_named_parameters: error

    # Style Rules
    always_declare_return_types: error
    always_put_control_body_on_new_line: warning
    avoid_equals_and_hash_code_on_mutable_classes: error
    avoid_field_initializers_in_const_classes: warning
    avoid_function_literals_in_foreach_calls: warning
    avoid_returning_this: warning
    avoid_unused_constructor_parameters: warning
    avoid_void_async: error
    await_only_futures: warning
    cast_nullable_to_non_nullable: warning
    conditional_uri_does_not_exist: warning
    no_leading_underscores_for_local_identifiers: warning
    null_closures: error
    only_throw_errors: warning
    parameter_assignments: error
    prefer_asserts_with_message: warning
    prefer_const_constructors: error
    prefer_const_constructors_in_immutables: warning
    prefer_const_declarations: warning
    prefer_const_literals_to_create_immutables: warning
    prefer_expression_function_bodies: warning
    prefer_final_fields: error
    prefer_final_in_for_each: error
    prefer_final_locals: error
    prefer_function_declarations_over_variables: warning
    prefer_generic_function_type_aliases: warning
    prefer_initializing_formals: warning
    prefer_typing_uninitialized_variables: error
    provide_deprecation_message: warning
    recursive_getters: warning
    tighten_type_of_initializing_formals: warning
    type_annotate_public_apis: error
    unawaited_futures: warning
    unnecessary_await_in_return: warning
    unnecessary_this: warning
    use_full_hex_values_for_flutter_colors: warning
    use_function_type_syntax_for_parameters: warning
    use_string_buffers: warning
    use_enums: warning

    # Pub Rules
    depend_on_referenced_packages: error
    secure_pubspec_urls: warning

linter:
  rules:
    # Public packages
    public_member_api_docs: false
    lines_longer_than_80_chars: false

    # Flutter
    use_key_in_widget_constructors: true
    use_full_hex_values_for_flutter_colors: true
    flutter_style_todos: false
    sized_box_for_whitespace: true
    sized_box_shrink_expand: true
    use_colored_box: true
    use_decorated_box: true
    avoid_unnecessary_containers: true

    # Disabled
    prefer_relative_imports: false
    avoid_annotating_with_dynamic: false
    unnecessary_final: false
    always_specify_types: false
    avoid_redundant_argument_values: false
    prefer_double_quotes: false
    sort_constructors_first: false
    sort_unnamed_constructors_first: false
    always_put_control_body_on_new_line: false
    sort_pub_dependencies: false
    do_not_use_environment: false
    diagnostic_describe_all_properties: false
    prefer_final_parameters: false
    avoid_types_on_closure_parameters: false
    always_put_required_named_parameters_first: false
    prefer_constructors_over_static_methods: false
    prefer_foreach: false
    avoid_positional_boolean_parameters: false
    avoid_private_typedef_functions: false

    # Enabled
    avoid_web_libraries_in_flutter: true
    comment_references: true # Unused because https://github.com/dart-lang/sdk/issues/36974
    curly_braces_in_flow_control_structures: true
    depend_on_referenced_packages: true
    use_named_constants: true
    use_enums: true
    use_is_even_rather_than_modulo: true
    unnecessary_await_in_return: true
    library_private_types_in_public_api: true
    tighten_type_of_initializing_formals: true
    exhaustive_cases: true
    always_use_package_imports: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_double_and_int_checks: true
    avoid_escaping_inner_quotes: true
    avoid_field_initializers_in_const_classes: true
    avoid_implementing_value_types: true
    avoid_js_rounded_ints: true
    avoid_print: true
    avoid_renaming_method_parameters: true
    avoid_returning_null_for_future: true
    avoid_returning_null_for_void: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    cancel_subscriptions: true
    cascade_invocations: true
    close_sinks: true
    control_flow_in_finally: true
    empty_statements: true
    collection_methods_unrelated_type: true
    dangling_library_doc_comments: true
    implicit_call_tearoffs: true
    type_literal_in_constant_pattern: true
    unnecessary_to_list_in_spreads: true
    use_string_in_part_of_directives: true
    use_super_parameters: true
    join_return_with_assignment: true
    leading_newlines_in_multiline_strings: true
    literal_only_boolean_expressions: true
    missing_whitespace_between_adjacent_strings: true
    no_adjacent_strings_in_list: true
    no_logic_in_create_state: true
    no_runtimeType_toString: true
    only_throw_errors: true
    overridden_fields: true
    package_names: true
    package_prefixed_library_names: true
    parameter_assignments: true
    prefer_asserts_in_initializer_lists: true
    prefer_asserts_with_message: true
    prefer_const_constructors: true
    prefer_const_constructors_in_immutables: true
    prefer_const_declarations: true
    prefer_const_literals_to_create_immutables: true
    prefer_expression_function_bodies: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_if_elements_to_conditional_expressions: true
    prefer_inlined_adds: true
    prefer_int_literals: true
    prefer_is_not_operator: true
    prefer_mixin: true
    prefer_null_aware_operators: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    sort_child_properties_last: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_null_aware_assignments: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_raw_strings: true
    unnecessary_statements: true
    unnecessary_string_escapes: true
    unnecessary_string_interpolations: true
    unsafe_html: true
    use_raw_strings: true
    use_string_buffers: true
    valid_regexps: true
    void_checks: true
    always_declare_return_types: true
    always_require_non_null_named_parameters: true
    annotate_overrides: true
    avoid_empty_else: true
    avoid_init_to_null: true
    avoid_null_checks_in_equality_operators: true
    avoid_relative_lib_imports: true
    avoid_return_types_on_setters: true
    avoid_shadowing_type_parameters: true
    avoid_types_as_parameter_names: true
    camel_case_extensions: true
    empty_catches: true
    empty_constructor_bodies: true
    library_names: true
    library_prefixes: true
    no_duplicate_case_values: true
    null_closures: true
    omit_local_variable_types: true
    prefer_adjacent_string_concatenation: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_contains: true
    prefer_final_fields: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_iterable_whereType: true
    prefer_single_quotes: true
    prefer_spread_collections: true
    recursive_getters: true
    slash_for_doc_comments: true
    type_init_formals: true
    unawaited_futures: true
    unnecessary_const: true
    unnecessary_new: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_this: true
    unrelated_type_equality_checks: true
    use_function_type_syntax_for_parameters: true
    use_rethrow_when_possible: true
    camel_case_types: true
    file_names: true
    non_constant_identifier_names: true
    constant_identifier_names: true
    directives_ordering: true
    package_api_docs: true
    implementation_imports: true
    prefer_interpolation_to_compose_strings: true
    unnecessary_brace_in_string_interps: true
    avoid_function_literals_in_foreach_calls: true
    prefer_function_declarations_over_variables: true
    unnecessary_lambdas: true
    unnecessary_getters_setters: true
    prefer_initializing_formals: true
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    use_to_and_as_if_applicable: true
    one_member_abstracts: true
    avoid_classes_with_only_static_members: true
    use_setters_to_change_properties: true
    avoid_setters_without_getters: true
    avoid_returning_null: true
    avoid_returning_this: true
    type_annotate_public_apis: true
    hash_and_equals: true
    avoid_equals_and_hash_code_on_mutable_classes: true
    avoid_dynamic_calls: true
    avoid_multiple_declarations_per_line: true
    avoid_type_to_string: true
    deprecated_consistency: true
    eol_at_end_of_file: true
    noop_primitive_operations: true
    prefer_null_aware_method_calls: true
    unnecessary_constructor_name: true
    use_if_null_to_convert_nulls_to_bools: true
    use_test_throws_matchers: true
    unnecessary_late: true
    conditional_uri_does_not_exist: true
    #avoid_final_parameters: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    secure_pubspec_urls: true

    # Experimental
    use_late_for_private_fields_and_variables: true
    use_build_context_synchronously: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_null_checks: true
    require_trailing_commas: true
    null_check_on_nullable_type_parameter: true
    cast_nullable_to_non_nullable: true

    # Deprecated
    #avoid_as (deprecated)
    #prefer_bool_in_asserts (deprecated)
    #super_goes_last (deprecated)

dart_code_metrics:
  metrics:
    - cyclomatic-complexity: 20
    - halstead-volume: 150
    - lines-of-code: 100
    - maintainability-index: 50
    - maximum-nesting-level: 5
    - number-of-parameters: 4
    - number-of-used-widgets: 10
    - source-lines-of-code: 50
    - widgets-nesting-level: 10

    - depth-of-inheritance-tree: 4
    - number-of-added-methods: 10
    - number-of-overridden-methods: 10
    - number-of-implemented-interfaces: 10
    - number-of-methods: 10
    - coupling-between-object-classes: 10
    - response-for-class: 10
    - weighted-methods-per-class: 10
    - tight-class-cohesion: 10
    - weight-of-class: 0.33

    - number-of-imports: 10
    - number-of-external-imports: 10
    - technical-debt:
        threshold: 1
        todo-cost: 161
        ignore-cost: 320
        ignore-for-file-cost: 396
        as-dynamic-cost: 322
        deprecated-annotations-cost: 37
        file-nullsafety-migration-cost: 41
        unit-type: "USD"
  metrics-exclude:
    - test/**

  rules:
    # - arguments-ordering:
    #    child-last: true
    - avoid-accessing-collections-by-constant-index
    - avoid-accessing-other-classes-private-members
    # - avoid-async-call-in-sync-function
    # - avoid-banned-annotations
    # - avoid-banned-file-names
    # - avoid-banned-imports
    # - avoid-banned-types
    # - avoid-barrel-files
    - avoid-bottom-type-in-patterns
    - avoid-bottom-type-in-records
    - avoid-cascade-after-if-null
    - avoid-collapsible-if
    - avoid-collection-methods-with-unrelated-types
    # - avoid-collection-mutating-methods:
    #     ignore-local: true
    # - avoid-declaring-call-method
    - avoid-double-slash-imports
    # - avoid-duplicate-cascades
    - avoid-duplicate-exports
    - avoid-duplicate-mixins
    - avoid-duplicate-named-imports
    - avoid-duplicate-patterns
    - avoid-duplicate-switch-case-conditions
    - avoid-dynamic:
        severity: error
    - avoid-equal-expressions
    - avoid-explicit-pattern-field-name
    - avoid-explicit-type-declaration
    # - avoid-extensions-on-records
    - avoid-function-type-in-records
    - avoid-future-tostring
    - avoid-generics-shadowing
    - avoid-global-state:
        severity: error
    - avoid-identical-exception-handling-blocks
    # - avoid-ignoring-return-values
    - avoid-importing-entrypoint-exports
    # - avoid-inferrable-type-arguments
    - avoid-inverted-boolean-checks
    - avoid-keywords-in-wildcard-pattern
    # - avoid-late-keyword
    # - avoid-local-functions
    - avoid-long-files:
        max-length: 1500
    - avoid-long-functions:
        max-length: 1000
        ignored-names:
          - some
          - name
    - avoid-long-parameter-list:
        ignore-optional: true
        max-amount: 7
        ignored-names:
          - some
          - name
    - avoid-long-records:
        max-amount: 7
    - avoid-map-keys-contains
    - avoid-missed-calls
    - avoid-missing-enum-constant-in-map:
        severity: error
    - avoid-missing-interpolation
    # - avoid-missing-test-files
    - avoid-misused-wildcard-pattern
    - avoid-mixing-named-and-positional-fields
    - avoid-mutating-parameters
    - avoid-negated-conditions
    - avoid-nested-conditional-expressions:
        acceptable-level: 3 #
    - avoid-nested-futures
    - avoid-nested-records
    - avoid-nested-streams-and-futures
    - avoid-nested-switch-expressions
    - avoid-nested-switches
    # - avoid-non-ascii-symbols
    # - avoid-non-null-assertion
    # - avoid-nullable-interpolation
    - avoid-nullable-parameters-with-default-values
    - avoid-one-field-records
    # - avoid-passing-async-when-sync-expected
    # - avoid-passing-default-values
    - avoid-passing-self-as-argument
    - avoid-positional-record-field-access
    - avoid-recursive-calls
    - avoid-redundant-async
    - avoid-redundant-else
    # - avoid-redundant-positional-field-name
    - avoid-redundant-pragma-inline
    - avoid-referencing-discarded-variables
    - avoid-self-assignment
    - avoid-self-compare
    - avoid-shadowed-extension-methods
    - avoid-shadowing:
        ignore-parameters: true
    # - avoid-similar-names
    - avoid-substring
    - avoid-throw-in-catch-block
    - avoid-throw-objects-without-tostring
    - avoid-top-level-members-in-tests
    - avoid-unassigned-late-fields-keyword
    - avoid-uncaught-future-errors
    - avoid-unconditional-break
    - avoid-unnecessary-call
    - avoid-unnecessary-conditionals
    - avoid-unnecessary-futures
    - avoid-unnecessary-getter:
        ignore-upcast: true
    - avoid-unnecessary-if
    - avoid-unnecessary-late
    - avoid-unnecessary-negations
    - avoid-unnecessary-nullable-return-type
    - avoid-unnecessary-reassignment
    - avoid-unnecessary-return
    - avoid-unnecessary-type-assertions:
        severity: style
    - avoid-unnecessary-type-casts:
        severity: style
    - avoid-unnecessary-super
    - avoid-unrelated-type-assertions:
        severity: style
    - avoid-unrelated-type-casts
    # - avoid-unsafe-collection-methods #
    - avoid-unused-generics
    - avoid-unused-instances
    - avoid-unused-parameters
    - avoid-weak-cryptographic-algorithms
    # - avoid-wildcard-cases-with-enums
    # - banned-usage
    - binary-expression-operand-order
    - double-literal-format
    # - enum-constants-ordering
    # - format-comment #
    # - format-test-name
    - function-always-returns-null
    # - map-keys-ordering
    # - match-class-name-pattern
    - match-getter-setter-field-names
    - match-lib-folder-structure
    - match-positional-field-names-on-assignment
    - member-ordering:
        alphabetize: false
    - missing-test-assertion
    - move-records-to-typedefs
    - move-variable-closer-to-its-usage
    - newline-before-case
    # - newline-before-return
    - no-boolean-literal-compare
    # - no-empty-block #
    # - no-equal-arguments: #
    #    ignored-parameters:
    #      - height
    #      - width
    - no-equal-conditions
    - no-equal-nested-conditions
    - no-equal-switch-case
    - no-equal-switch-expression-cases
    - no-equal-then-else
    # - no-magic-number #
    - no-object-declaration
    # - parameters-ordering
    # - prefer-addition-subtraction-assignments
    - prefer-async-await
    - prefer-both-inlining-annotations # Web JS
    - prefer-bytes-builder
    # - prefer-commenting-analyzer-ignores
    - prefer-conditional-expressions
    - prefer-correct-callback-field-name:
        name-pattern: ^on[A-Z]+|^set[A-Z]+|^get[A-Z]+|([a-z]+)Builder
    - prefer-correct-error-name
    - prefer-correct-for-loop-increment
    # - prefer-correct-future-return-type
    # - prefer-correct-handler-name:
    #     name-pattern: ^handle[A-Z]+
    - prefer-correct-identifier-length:
        exceptions:
          ["e", "i", "j", "k", "x", "y", "z", "id", "db", "h", "v", "js", "fn"]
        max-identifier-length: 30
        min-identifier-length: 3
    - prefer-correct-json-casts
    - prefer-correct-setter-parameter-name
    - prefer-correct-stream-return-type
    - prefer-correct-switch-length:
        min-length: 2
        max-length: 10
    - prefer-correct-test-file-name
    - prefer-correct-type-name:
        excluded: ["n"]
        min-length: 3
        max-length: 40
    - prefer-declaring-const-constructor
    - prefer-early-return
    - prefer-enums-by-name
    - prefer-explicit-function-type
    - prefer-explicit-parameter-names
    - prefer-explicit-type-arguments
    - prefer-first
    - prefer-getter-over-method
    - prefer-immediate-return
    - prefer-iterable-of
    - prefer-last
    - prefer-match-file-name:
        include:
          - lib/**_widget.dart
    - prefer-moving-to-variable:
        allowed-duplicated-chains: 4
    - prefer-named-boolean-parameters
    - prefer-null-aware-spread
    # - prefer-named-imports
    - prefer-parentheses-with-if-null
    - prefer-prefixed-global-constants
    - prefer-public-exception-classes
    - prefer-return-await
    - prefer-returning-conditional-expressions
    - prefer-simpler-patterns-null-check
    - prefer-specific-cases-first
    - prefer-static-class:
        ignore-annotations:
          - run
        ignore-private: true
        ignore-names:
          - run
          - logger
          - (.*)Dialog
          - (.*)Initialization
          - (.*)ClientChannel
    - prefer-test-matchers
    - prefer-trailing-comma
    # - prefer-type-over-var
    # - prefer-typedefs-for-callbacks
    - prefer-unique-test-names
    - prefer-unwrapping-future-or
    - prefer-visible-for-testing-on-members
    - prefer-wildcard-pattern
    - tag-name:
        var-names: [_kTag]
        strip-prefix: _
        strip-postfix: State
    # - unnecessary-trailing-comma

    # Flutter
    # - add-copy-with
    - always-remove-listener
    - avoid-border-all
    - avoid-empty-setstate
    - avoid-expanded-as-spacer
    - avoid-incomplete-copy-with
    - avoid-inherited-widget-in-initstate
    - avoid-late-context
    - avoid-missing-image-alt
    - avoid-recursive-widget-calls
    - avoid-returning-widgets
    - avoid-shrink-wrap-in-lists
    - avoid-single-child-column-or-row
    - avoid-state-constructors
    - avoid-stateless-widget-initialized-fields
    - avoid-unnecessary-overrides-in-state
    - avoid-unnecessary-setstate
    - avoid-wrapping-in-padding
    - check-for-equals-in-render-object-setters
    - consistent-update-render-object
    - dispose-fields
    - prefer-action-button-tooltip
    - prefer-const-border-radius
    - prefer-correct-edge-insets-constructor
    - prefer-dedicated-media-query-methods
    - prefer-define-hero-tag
    - prefer-extracting-callbacks:
        allowed-line-count: 8 #
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
    - prefer-sliver-prefix
    - prefer-text-rich
    - prefer-using-list-view
    - prefer-widget-private-members:
        ignore-static: true
        ignored-names:
          - (.*)Of
          - of
          - (.*)Overlay
    - proper-super-calls
    - use-setstate-synchronously

    # BLoC
    # - avoid-bloc-public-methods
    - avoid-cubits
    # - avoid-passing-bloc-to-bloc
    - check-is-not-closed-after-async-gap
    - prefer-correct-bloc-provider
    - prefer-multi-bloc-provider

    # Flame
    - avoid-creating-vector-in-update
    - avoid-initializing-in-on-mount
    - avoid-redundant-async-on-load
    - correct-game-instantiating

    # Patrol tests
    - prefer-custom-finder-over-find
    - prefer-symbol-over-key
    # FakeAsync
    - avoid-async-callback-in-fake-async

    # Pubspec
    # - avoid-any-version
    # - avoid-dependency-overrides
    # - banned-dependencies
    # - prefer-caret-version-syntax
    # - prefer-correct-package-name
    # - prefer-correct-screenshots
    # - prefer-publish-to-none
    # - prefer-semver-version

    # Intl
    - prefer-date-format
    - prefer-intl-name
    # - prefer-number-format
    - prefer-providing-intl-description
    - prefer-providing-intl-examples
    - provide-correct-intl-args
